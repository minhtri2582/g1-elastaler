curl -v --location '54.255.9.139:3030/test' \
--header 'Content-Type: application/json' \
--data-raw '{"rule": "# (Required)\n# Rule name, must be unique\nname1: Detect Fuzzing Extension \n\n# (Required)\n# Type of alert.\n# the frequency rule type alerts when num_events events occur with timeframe time\ntype: frequency\n\n# (Required)\n# Index to search, wildcard supported\nindex: g1-hq-aws-waf-*\n\n# (Required, frequency specific)\n# Alert when this many documents matching the query occur within a timeframe\nnum_events: 10\n\nrealert:\n  seconds: 0\n\n# (Required, frequency specific)\n# num_events must occur within this amount of time to trigger an alert\n\ntimeframe:\n  hours: 128\n\n# (Required)\n# A list of Elasticsearch filters used for find events\n# These filters are joined with AND and nested in a filtered query\n# For more info: https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\nfilter:\n- query:\n    query_string:\n      query: \"event.action : BLOCK and labels.name: *RestrictedExtensions*\"\n\n\n# Enhancement for converting '\''detections'\'' array into object, ex. get merged detection type by\n# '\''detections_parsed.type'\'' or get first detection type by '\''detection_parsed.0.type'\''\n#match_enhancements:\n#- \"elastalert_modules.bitsensor_enhancement.AlertTextEnhancement\"\n#run_enhancements_first: true\n\n\nalert_subject: \"[G1] Fuzzing Extension Detection on {}\"\nalert_subject_args:\n  - tags[0]\n\nalert_text_type: alert_text_only\nalert_text_args: [\"event.action\", \"@timestamp\"]\n\nalert_text: \"[Triggered]\\n\\nAttack type: Fuzzing Extention\\n\\n Event action: {}\\n\\nTime: {}\"\n\n# The alert is use when a match is found\nalert:\n  - debug\n  - ms_teams\nms_teams_theme_color: \"#6600ff\"\nms_teams_webhook_url: \"https://galaxy1vn.webhook.office.com/webhookb2/247e6a35-de0f-4e37-afa7-2dcb3ddb71c2@edd57295-3353-4a31-a447-2e9296fab693/IncomingWebhook/bf4d085c116742298456cb1d60c11a80/5ff7e4d0-0480-4553-8a1c-6e07ab063205\"", "options": {
    "alert":true,
    "format": "JSON",
    "maxResults":1
}}'
